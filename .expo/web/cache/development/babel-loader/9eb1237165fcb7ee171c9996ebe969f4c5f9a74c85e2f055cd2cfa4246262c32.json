{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FlexDirectionBasics = function FlexDirectionBasics() {\n  var _useState = useState('column'),\n    _useState2 = _slicedToArray(_useState, 2),\n    flexDirection = _useState2[0],\n    setflexDirection = _useState2[1];\n  return _jsxs(PreviewLayout, {\n    label: \"flexDirection\",\n    values: ['column', 'row', 'row-reverse', 'column-reverse'],\n    selectedValue: flexDirection,\n    setSelectedValue: setflexDirection,\n    children: [_jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'powderblue'\n      }]\n    }), _jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'skyblue'\n      }]\n    }), _jsx(View, {\n      style: [styles.box, {\n        backgroundColor: 'steelblue'\n      }]\n    })]\n  });\n};\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var label = _ref.label,\n    children = _ref.children,\n    values = _ref.values,\n    selectedValue = _ref.selectedValue,\n    setSelectedValue = _ref.setSelectedValue;\n  return _jsxs(View, {\n    style: {\n      padding: 10,\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: label\n    }), _jsx(View, {\n      style: styles.row,\n      children: values.map(function (value) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelectedValue(value);\n          },\n          style: [styles.button, selectedValue === value && styles.selected],\n          children: _jsx(Text, {\n            style: [styles.buttonLabel, selectedValue === value && styles.selectedLabel],\n            children: value\n          })\n        }, value);\n      })\n    }), _jsx(View, {\n      style: [styles.container, _defineProperty({}, label, selectedValue)],\n      children: children\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: 'aliceblue'\n  },\n  box: {\n    width: 50,\n    height: 50\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: 'oldlace',\n    alignSelf: 'flex-start',\n    marginHorizontal: '1%',\n    marginBottom: 6,\n    minWidth: '48%',\n    textAlign: 'center'\n  },\n  selected: {\n    backgroundColor: 'coral',\n    borderWidth: 0\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: 'coral'\n  },\n  selectedLabel: {\n    color: 'white'\n  },\n  label: {\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 24\n  }\n});\nexport default FlexDirectionBasics;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","FlexDirectionBasics","_useState","_useState2","_slicedToArray","flexDirection","setflexDirection","PreviewLayout","label","values","selectedValue","setSelectedValue","children","style","styles","box","backgroundColor","_ref","padding","flex","row","map","value","onPress","button","selected","buttonLabel","selectedLabel","container","_defineProperty","create","marginTop","width","height","flexWrap","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","textAlign","borderWidth","fontSize","fontWeight","color"],"sources":["/home/eduardo/Projects/learning-react/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, Text, TouchableOpacity, View} from 'react-native';\nimport type {PropsWithChildren} from 'react';\n\nconst FlexDirectionBasics = () => {\n  const [flexDirection, setflexDirection] = useState('column');\n\n  return (\n    <PreviewLayout\n      label=\"flexDirection\"\n      values={['column', 'row', 'row-reverse', 'column-reverse']}\n      selectedValue={flexDirection}\n      setSelectedValue={setflexDirection}>\n      <View style={[styles.box, {backgroundColor: 'powderblue'}]} />\n      <View style={[styles.box, {backgroundColor: 'skyblue'}]} />\n      <View style={[styles.box, {backgroundColor: 'steelblue'}]} />\n    </PreviewLayout>\n  );\n};\n\ntype PreviewLayoutProps = PropsWithChildren<{\n  label: string;\n  values: string[];\n  selectedValue: string;\n  setSelectedValue: (value: string) => void;\n}>;\n\nconst PreviewLayout = ({\n  label,\n  children,\n  values,\n  selectedValue,\n  setSelectedValue,\n}: PreviewLayoutProps) => (\n  <View style={{padding: 10, flex: 1}}>\n    <Text style={styles.label}>{label}</Text>\n    <View style={styles.row}>\n      {values.map(value => (\n        <TouchableOpacity\n          key={value}\n          onPress={() => setSelectedValue(value)}\n          style={[styles.button, selectedValue === value && styles.selected]}>\n          <Text\n            style={[\n              styles.buttonLabel,\n              selectedValue === value && styles.selectedLabel,\n            ]}>\n            {value}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n    <View style={[styles.container, {[label]: selectedValue}]}>{children}</View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: 'aliceblue',\n  },\n  box: {\n    width: 50,\n    height: 50,\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: 'oldlace',\n    alignSelf: 'flex-start',\n    marginHorizontal: '1%',\n    marginBottom: 6,\n    minWidth: '48%',\n    textAlign: 'center',\n  },\n  selected: {\n    backgroundColor: 'coral',\n    borderWidth: 0,\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: 'coral',\n  },\n  selectedLabel: {\n    color: 'white',\n  },\n  label: {\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 24,\n  },\n});\n\nexport default FlexDirectionBasics;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}