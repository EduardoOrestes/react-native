{"ast":null,"code":"import React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Separator = function Separator() {\n  return _jsx(View, {\n    style: Platform.OS === 'android' ? styles.separator : null\n  });\n};\nvar App = function App() {\n  var ONE_SECOND_IN_MS = 1000;\n  var PATTERN = [1 * ONE_SECOND_IN_MS, 2 * ONE_SECOND_IN_MS, 3 * ONE_SECOND_IN_MS];\n  var PATTERN_DESC = Platform.OS === 'android' ? 'wait 1s, vibrate 2s, wait 3s' : 'wait 1s, vibrate, wait 2s, vibrate, wait 3s';\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.header, styles.paragraph],\n      children: \"Vibration API\"\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        title: \"Vibrate once\",\n        onPress: function onPress() {\n          return Vibrate.vibrate();\n        }\n      })\n    }), _jsx(Separator, {}), Platform.OS === 'android' ? [_jsx(View, {\n      children: _jsx(Button, {\n        title: \"Vibrate for 10 seconds\",\n        onPress: function onPress() {\n          return Vibration.vibrate(10 * ONE_SECOND_IN_MS);\n        }\n      })\n    }), _jsx(Separator, {})] : null, _jsxs(Text, {\n      style: styles.paragraph,\n      children: [\"Pattern: \", PATTERN_DESC]\n    }), _jsx(Button, {\n      title: \"Vibrate with pattern\",\n      onPress: function onPress() {\n        return Vibration.vibrate(PATTERN);\n      }\n    }), _jsx(Separator, {}), _jsx(Button, {\n      title: \"Vibrate with pattern until canceled\",\n      onPress: function onPress() {\n        return Vibration.vibrate(PATTERN, true);\n      }\n    }), _jsx(Separator, {}), _jsx(Button, {\n      title: \"Stop vibration pattern\",\n      onPress: function onPress() {\n        return Vibration.cancel();\n      },\n      color: \"#FF0000\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: 44,\n    padding: 8\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  paragraph: {\n    margin: 24,\n    textAlign: 'center'\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSeeht.hairlineWidth\n  }\n});\nexport default App;","map":{"version":3,"names":["React","Button","Platform","Text","Vibration","View","SafeAreaView","StyleSheet","jsx","_jsx","jsxs","_jsxs","Separator","style","OS","styles","separator","App","ONE_SECOND_IN_MS","PATTERN","PATTERN_DESC","container","children","header","paragraph","title","onPress","Vibrate","vibrate","cancel","color","create","flex","justifyContent","paddingTop","padding","fontSize","fontWeight","textAlign","margin","marginVertical","borderBottomColor","borderBottomWidth","StyleSeeht","hairlineWidth"],"sources":["/home/eduardo/Projects/learning-react/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Platform,\n  Text,\n  Vibration,\n  View,\n  SafeAreaView,\n  StyleSheet,\n} from 'react-native';\n\nconst Separator = () => {\n  return <View style={Platform.OS === 'android' ? styles.separator : null} />;\n};\n\nconst App = () => {\n  const ONE_SECOND_IN_MS = 1000;\n  \n  const PATTERN = [\n    1 * ONE_SECOND_IN_MS,\n    2 * ONE_SECOND_IN_MS,\n    3 * ONE_SECOND_IN_MS,\n  ];\n\n  const PATTERN_DESC =\n    Platform.OS === 'android'\n      ? 'wait 1s, vibrate 2s, wait 3s'\n      : 'wait 1s, vibrate, wait 2s, vibrate, wait 3s';\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={[styles.header, styles.paragraph]}>\n        Vibration API\n      </Text>\n\n      <View>\n        <Button title=\"Vibrate once\" onPress={() => Vibrate.vibrate()} />\n      </View>\n\n      <Separator />\n\n      {Platform.OS === 'android'\n        ? [\n          <View>\n            <Button\n              title=\"Vibrate for 10 seconds\"\n              onPress={() => Vibration.vibrate(10 * ONE_SECOND_IN_MS)}\n            />\n          </View>,\n\n          <Separator />,\n        ] : null}\n\n      <Text style={styles.paragraph}>\n        Pattern: {PATTERN_DESC}\n      </Text>\n\n      <Button\n        title=\"Vibrate with pattern\"\n        onPress={() => Vibration.vibrate(PATTERN)} />\n\n      <Separator />\n\n      <Button\n        title=\"Vibrate with pattern until canceled\"\n        onPress={() => Vibration.vibrate(PATTERN, true)} />\n\n      <Separator />\n\n      <Button\n        title=\"Stop vibration pattern\"\n        onPress={() => Vibration.cancel()}\n        color=\"#FF0000\"\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: 44,\n    padding: 8,\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  paragraph: {\n    margin: 24,\n    textAlign: 'center',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSeeht.hairlineWidth,\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}